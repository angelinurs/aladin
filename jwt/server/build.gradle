plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.korutil'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// 외부 소셜 로그인 인증시만 필요
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-jose'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-resource-server
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server:3.4.4'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-oauth2-jose
	implementation 'org.springframework.security:spring-security-oauth2-jose:6.4.5'

	// https://mvnrepository.com/artifact/com.github.ulisesbocchio/jasypt-spring-boot-starter
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'

	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.19.0'

	// https://mvnrepository.com/artifact/com.fasterxml.woodstox/woodstox-core
	implementation 'com.fasterxml.woodstox:woodstox-core:7.1.0'

	// https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// https://mvnrepository.com/artifact/dev.langchain4j/langchain4j
	testImplementation 'dev.langchain4j:langchain4j:0.36.2'
	// https://mvnrepository.com/artifact/dev.langchain4j/langchain4j-hugging-face
	implementation 'dev.langchain4j:langchain4j-hugging-face:0.36.2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory.set(querydslDir)
}

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}
clean.doLast {
	file(querydslDir).deleteDir()
}
